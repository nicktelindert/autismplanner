{"remainingRequest":"/home/nick/helloworld/node_modules/thread-loader/dist/cjs.js!/home/nick/helloworld/node_modules/babel-loader/lib/index.js!/home/nick/helloworld/node_modules/eslint-loader/index.js??ref--13-0!/home/nick/helloworld/src/store/index.js","dependencies":[{"path":"/home/nick/helloworld/src/store/index.js","mtime":1633436744703},{"path":"/home/nick/helloworld/node_modules/cache-loader/dist/cjs.js","mtime":1633432308115},{"path":"/home/nick/helloworld/node_modules/thread-loader/dist/cjs.js","mtime":1633432308115},{"path":"/home/nick/helloworld/node_modules/babel-loader/lib/index.js","mtime":1633432309838},{"path":"/home/nick/helloworld/node_modules/eslint-loader/index.js","mtime":1633432308525}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICd2dWV4JzsKCkRhdGUucHJvdG90eXBlLmFkZERheXMgPSBmdW5jdGlvbiAoZGF5cykgewogIHZhciBkYXRlID0gbmV3IERhdGUodGhpcy52YWx1ZU9mKCkpOwogIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIGRheXMpOwogIHJldHVybiBkYXRlOwp9OwoKdmFyIGRhdGVUb2RheSA9IG5ldyBEYXRlKCk7CnZhciBkYXRlVG9tb3Jyb3cgPSBuZXcgRGF0ZSgpLmFkZERheXMoMSk7CmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0b3JlKHsKICBzdGF0ZTogewogICAgY3VycmVudExpc3Q6ICd0b2RheScsCiAgICB0YXNrczogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UudGFza3MpLAogICAgZGF0ZTogZGF0ZVRvZGF5LnRvTG9jYWxlU3RyaW5nKCkKICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlTGlzdDogZnVuY3Rpb24gdXBkYXRlTGlzdChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5jdXJyZW50TGlzdCA9IHBheWxvYWQ7CgogICAgICBpZiAocGF5bG9hZCA9PSAndG9kYXknKSB7CiAgICAgICAgc3RhdGUuZGF0ZSA9IGRhdGVUb2RheTsKICAgICAgfSBlbHNlIGlmIChwYXlsb2FkID09ICd0b21vcnJvdycpIHsKICAgICAgICBzdGF0ZS5kYXRlID0gZGF0ZVRvbW9ycm93OwogICAgICB9IGVsc2UgewogICAgICAgIHN0YXRlLmRhdGUgPSAnbGF0ZXInOwogICAgICB9CiAgICB9LAogICAgYWRkVGFzazogZnVuY3Rpb24gYWRkVGFzayhzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS50YXNrcy5wdXNoKHsKICAgICAgICAnZGVzY3JpcHRpb24nOiBwYXlsb2FkLAogICAgICAgICd0eXBlJzogc3RhdGUuY3VycmVudExpc3QsCiAgICAgICAgZGF0ZTogc3RhdGUuZGF0ZQogICAgICB9KTsKICAgICAgbG9jYWxTdG9yYWdlLnRhc2tzID0gSlNPTi5zdHJpbmdpZnkoc3RhdGUudGFza3MpOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgc2VsZWN0ZWRMaXN0OiBmdW5jdGlvbiBzZWxlY3RlZExpc3Qoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRMaXN0OwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/home/nick/helloworld/src/store/index.js"],"names":["createStore","Date","prototype","addDays","days","date","valueOf","setDate","getDate","dateToday","dateTomorrow","state","currentList","tasks","JSON","parse","localStorage","toLocaleString","mutations","updateList","payload","addTask","push","stringify","getters","selectedList"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;;AACAC,IAAI,CAACC,SAAL,CAAeC,OAAf,GAAyB,UAASC,IAAT,EAAe;AACtC,MAAIC,IAAI,GAAG,IAAIJ,IAAJ,CAAS,KAAKK,OAAL,EAAT,CAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,IAA9B;AACD,SAAOC,IAAP;AACA,CAJD;;AAMA,IAAMI,SAAS,GAAG,IAAIR,IAAJ,EAAlB;AACA,IAAMS,YAAY,GAAG,IAAIT,IAAJ,GAAWE,OAAX,CAAmB,CAAnB,CAArB;AAEA,eAAeH,WAAW,CAAC;AACzBW,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,OADR;AAELC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACH,KAAxB,CAFF;AAGLR,IAAAA,IAAI,EAAEI,SAAS,CAACQ,cAAV;AAHD,GADkB;AAMzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UADS,sBACGR,KADH,EACUS,OADV,EACmB;AAC1BT,MAAAA,KAAK,CAACC,WAAN,GAAoBQ,OAApB;;AACA,UAAIA,OAAO,IAAI,OAAf,EAAwB;AACtBT,QAAAA,KAAK,CAACN,IAAN,GAAaI,SAAb;AACD,OAFD,MAEO,IAAIW,OAAO,IAAI,UAAf,EAA2B;AAChCT,QAAAA,KAAK,CAACN,IAAN,GAAaK,YAAb;AACD,OAFM,MAEA;AACLC,QAAAA,KAAK,CAACN,IAAN,GAAa,OAAb;AACD;AACF,KAVQ;AAWTgB,IAAAA,OAXS,mBAWDV,KAXC,EAWMS,OAXN,EAWe;AACtBT,MAAAA,KAAK,CAACE,KAAN,CAAYS,IAAZ,CAAiB;AAAC,uBAAeF,OAAhB;AAAyB,gBAAQT,KAAK,CAACC,WAAvC;AAAoDP,QAAAA,IAAI,EAAEM,KAAK,CAACN;AAAhE,OAAjB;AACAW,MAAAA,YAAY,CAACH,KAAb,GAAqBC,IAAI,CAACS,SAAL,CAAeZ,KAAK,CAACE,KAArB,CAArB;AACD;AAdQ,GANc;AAsBzBW,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,sBAAAd,KAAK,EAAI;AACrB,aAAOA,KAAK,CAACC,WAAb;AACD;AAHM;AAtBgB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex'\nDate.prototype.addDays = function(days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n return date;\n}\n\nconst dateToday = new Date()\nconst dateTomorrow = new Date().addDays(1)\n\nexport default createStore({\n  state: {\n    currentList: 'today',\n    tasks: JSON.parse(localStorage.tasks),\n    date: dateToday.toLocaleString()\n  },\n  mutations: {\n    updateList (state, payload) {\n      state.currentList = payload\n      if (payload == 'today') {\n        state.date = dateToday\n      } else if (payload == 'tomorrow') {\n        state.date = dateTomorrow\n      } else {\n        state.date = 'later'\n      }\n    },\n    addTask(state, payload) {\n      state.tasks.push({'description': payload, 'type': state.currentList, date: state.date})\n      localStorage.tasks = JSON.stringify(state.tasks)\n    }\n  },\n  getters: {\n    selectedList: state => {\n      return state.currentList;\n    }\n  }\n})\n"]}]}